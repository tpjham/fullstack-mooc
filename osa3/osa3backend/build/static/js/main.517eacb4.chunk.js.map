{"version":3,"sources":["components/Note.js","services/notes.js","components/Alert.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","map","key","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"gOAgBeA,EAdF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,mBAAqB,iBAEzB,OACE,6BACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,M,gBCQ7B,EAfA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,ICQUC,EAfF,WAOX,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGCiFOC,EAvFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAAC,GACJgB,EAAShB,QAEZ,IAEH,IAqBMyB,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAAApC,GAAI,OAAuB,IAAnBA,EAAKG,aAuB9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcc,QAASc,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACSA,EAAU,YAAc,QAGnC,4BACGM,EAAYE,KAAI,SAAArC,GAAI,OACnB,kBAAC,EAAD,CAAMsC,IAAKtC,EAAKc,GAAId,KAAMA,EAC1BC,iBAAkB,kBAjCC,SAACa,GACjB,sCAAkCA,GAA3C,IACMd,EAAOyB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAOzC,GAAP,IAAaG,WAAYH,EAAKG,YAE/C+B,EACUpB,EAAI2B,GACXhC,MAAK,SAAAC,GACJgB,EAASD,EAAMY,KAAI,SAAArC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOU,SAEpDgC,OAAM,SAAAC,GACLX,EAAgB,QAAD,OACLhC,EAAKK,QADA,yCAGfuC,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAI,GAAC,OAAIA,EAAE1B,KAAOA,SAgBV+B,CAAmB7C,EAAKc,WAGpD,0BAAMgC,SA7DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB5C,QAASsB,EACTuB,MAAM,IAAIC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,GAC3BxC,GAAIW,EAAM8B,OAAS,GAGrBrB,EACUe,GACPxC,MAAK,SAAAC,GACJgB,EAASD,EAAM+B,OAAO9C,IACtBkB,EAAW,SAiDX,2BACE6B,MAAO9B,EACP+B,SA/CiB,SAACX,GACxBnB,EAAWmB,EAAMY,OAAOF,UAgDpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCnFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.517eacb4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? \"Make unimportant\" : \"Make important\"\r\n\r\n  return (\r\n    <div>\r\n      <li className=\"note\">\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note;","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Footer;","import React, {useState, useEffect} from 'react';\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\"\r\nimport Notification from \"./components/Alert\"\r\nimport Footer from './components/Footer';\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(response => {\r\n        setNotes(response)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(response => {\r\n        setNotes(notes.concat(response))\r\n        setNewNote(\"\")\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const url = `http://localhost:3001/notes/${id}`\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(response => {\r\n        setNotes(notes.map(note => note.id !== id ? note : response))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note ${note.content} was already removed from the server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  return ( \r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          Show { showAll ? \"Important\" : \"All\" }\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note key={note.id} note={note}\r\n          toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}